schema_version: 1
name: os-java-run
version: '1.0'
description: Legacy os-java-run script package.
execute:
- script: install_as_root
envs:
    - name: JAVA_MAX_INITIAL_MEM
      description: The maximum size of the initial heap memory, if the calculated default initial heap is larger then it will be capped at this value. The default is 4096 MB.
      example: "4096"
    - name: JAVA_CORE_LIMIT
      description: Core limit as described in https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt. Used to configure the number of GC threads and parallelism for ForkJoinPool. Defaults to container core limit.
      example: "2"
    - name: JAVA_DIAGNOSTICS
      description: Set this to get some diagnostics information to standard output when things are happening. **Disabled by default.**
      example: "true"
    - name: JAVA_MAX_MEM_RATIO
      description: This is used to calculate a default maximal heap memory based on a containers restriction. If used in a container without any memory constraints for the container then this option has no effect. If there is a memory constraint then `-Xmx` is set to a ratio of the container available memory as set here. The default is `50` which means 50% of the available memory is used as an upper boundary. You can skip this mechanism by setting this value to `0` in which case no `-Xmx` option is added.
      example: "50"
    - name: JAVA_INITIAL_MEM_RATIO
      description: This is used to calculate a default initial heap memory based the maximumal heap memory. The default is `100` which means 100% of the maximal heap is used for the initial heap size. You can skip this mechanism by setting this value to `0` in which case no `-Xms` option is added.
      example: "100"
    - name: JAVA_OPTS_APPEND
      description: Server startup options.
      example: "-Dfoo=bar"
    - name: GC_MIN_HEAP_FREE_RATIO
      description: Minimum percentage of heap free after GC to avoid expansion.
      example: "20"
    - name: GC_MAX_HEAP_FREE_RATIO
      description: Maximum percentage of heap free after GC to avoid shrinking.
      example: "40"
    - name: GC_TIME_RATIO
      description: Specifies the ratio of the time spent outside the garbage collection (for example, the time spent for application execution) to the time spent in the garbage collection.
      example: "4"
    - name: GC_ADAPTIVE_SIZE_POLICY_WEIGHT
      description: The weighting given to the current GC time versus previous GC times.
      example: "90"
    - name: GC_MAX_METASPACE_SIZE
      description: The maximum metaspace size.
      example: "100"
    - name: GC_CONTAINER_OPTIONS
      description: specify Java GC to use. The value of this variable should contain the necessary JRE command-line options to specify the required GC, which will override the default of `-XX:+UseParallelOldGC`.
      example: -XX:+UseG1GC
